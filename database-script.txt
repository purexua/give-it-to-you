DROP DATABASE IF EXISTS give_it_to_you_plus;

#创建数据库 give_it_to_you_plus
create database give_it_to_you_plus;

#使用数据库
use give_it_to_you_plus;

#创建 用户表(user)
CREATE TABLE user
(
    user_id       INT AUTO_INCREMENT PRIMARY KEY,
    user_name     VARCHAR(255) NOT NULL,
    password      VARCHAR(255) NOT NULL,
    real_name     VARCHAR(255) NOT NULL,
    id_card       VARCHAR(255),
    email         VARCHAR(100),
    address       VARCHAR(255),
    phone_number  VARCHAR(20),
    health_status VARCHAR(20)    DEFAULT 'Good',
    credit_status VARCHAR(20)    DEFAULT 'Fair',
    role          VARCHAR(20)    DEFAULT 'Client',
    wallet        DECIMAL(10, 2) DEFAULT 0,
    deleted       INT            DEFAULT 0,
    version       INT            DEFAULT 1
);

INSERT INTO user (user_name, password, real_name, id_card, email, address, phone_number)
    VALUE ('purexu', '123456', 'xjh', '123456789012345678', '', '', '');

INSERT INTO user (user_name, password, real_name, id_card, email, address, phone_number, role)
    VALUE ('admin', '123456', 'admin', '123456789012345678', '', '', '', 'Admin');

#创建 产品利率表 (Product_Interest_Rate)
CREATE TABLE product_interest_rate
(
    rate_id       INT AUTO_INCREMENT PRIMARY KEY,
    product_type  VARCHAR(50) DEFAULT 'Personal Loan',
    term          INT,
    interest_rate DECIMAL(5, 2),
    loan_amount   DECIMAL(10, 2), -- 金额字段，DECIMAL(总位数, 小数位数)
    CHECK ( interest_rate >= 0 AND interest_rate <= 100 AND loan_amount >= 0 )
);

INSERT INTO product_interest_rate (product_type, term, interest_rate, loan_amount)
VALUES ('A-6', 15, 6, 500),
       ('A-12', 30, 8, 2000),
       ('A-24', 45, 10, 5000),
       ('A-24-vip', 90, 0, 5000),
       ('B-6', 6, 15, 2000),
       ('B-12', 12, 30, 5000),
       ('B-24', 24, 45, 10000),
       ('B-24-vip', 90, 0, 10000),
       ('C-6', 6, 15, 5000),
       ('C-12', 12, 30, 10000),
       ('C-24', 24, 45, 20000),
       ('C-24-vip', 90, 0, 20000);

#创建 贷款申请表(Loan_Application)
CREATE TABLE loan_application
(
    application_id   INT PRIMARY KEY AUTO_INCREMENT,
    user_id          INT,
    loan_type        VARCHAR(255),
    term             INT,
    requested_amount DECIMAL(10, 2),
    interest_rate    DECIMAL(5, 2),
    application_time TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    approval_time    TIMESTAMP,
    status           VARCHAR(50) DEFAULT 'Pending',  -- Pending, Approved, Rejected
    FOREIGN KEY (user_id) REFERENCES user (user_id), -- 添加外键约束
    CHECK ( requested_amount >= 0 AND interest_rate >= 0 AND interest_rate <= 100 )
);

#创建 还款计划表(Repayment_Plan)
CREATE TABLE repayment_plan
(
    plan_id         INT PRIMARY KEY AUTO_INCREMENT,
    user_id         INT,
    application_id  INT,
    term            INT,
    current_term    INT       DEFAULT 1,
    due_amount      DECIMAL(10, 2),
    total_amount    DECIMAL(10, 2),
    plan_start_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_paid         INT       DEFAULT 0,             -- 0: Not Paid, 1: Paid
    FOREIGN KEY (user_id) REFERENCES user (user_id), -- 修改为外键约束
    FOREIGN KEY (application_id) REFERENCES loan_application (application_id),
    CHECK ( due_amount >= 0 AND total_amount >= 0 AND current_term >= 0 AND current_term <= term )
);

#创建 还款记录表(Repayment_Record)
CREATE TABLE repayment_record
(
    record_id      INT PRIMARY KEY AUTO_INCREMENT,
    user_id        INT,
    plan_id        INT,
    payment_time   TIMESTAMP,
    payment_amount DECIMAL(10, 2),
    payment_method VARCHAR(50) DEFAULT 'Wallet', -- Wallet, Alipay, Wechat
    FOREIGN KEY (user_id) REFERENCES user (user_id),
    FOREIGN KEY (plan_id) REFERENCES repayment_plan (plan_id),
    CHECK ( payment_amount >= 0 )
);

#创建 用户信用评分表(Credit_Score)
CREATE TABLE credit_score
(
    score_id           INT AUTO_INCREMENT PRIMARY KEY,
    user_id            INT,
    credit_score       INT,
    limit_amount       DECIMAL(10, 2),
    monthly_income     DECIMAL(10, 2),
    expenses           DECIMAL(10, 2),
    employment_status  VARCHAR(50)  DEFAULT 'Employed',-- Employed, Unemployed, Retired
    job_duration       INT,
    education_level    VARCHAR(50)  DEFAULT 'Bachelor',-- Bachelor, Master, Doctor
    overdue_records    INT,
    assets_value       DECIMAL(15, 2),
    social_connections INT,
    legal_disputes     INT,
    behavior_analysis  VARCHAR(255) DEFAULT 'Stable',-- Stable, Unstable
    FOREIGN KEY (user_id) REFERENCES user (user_id),
    CHECK ( credit_score >= 0 AND limit_amount >= 0 AND monthly_income >= 0 AND expenses >= 0 AND
            job_duration >= 0 AND overdue_records >= 0 AND assets_value >= 0 AND social_connections >= 0 AND
            legal_disputes >= 0 )
);

INSERT INTO Credit_Score (user_id,
                          credit_score,
                          limit_amount,
                          monthly_income,
                          expenses,
                          employment_status,
                          job_duration,
                          education_level,
                          overdue_records,
                          assets_value,
                          social_connections,
                          legal_disputes,
                          behavior_analysis)
VALUES (1, -- 用户ID
        750, -- 信用分数
        5000.00, -- 信用额度
        5000.00, -- 月收入
        3000.00, -- 月支出
        'Employed', -- 就业状态
        3, -- 工作年限
        'Bachelor', -- 教育程度
        0, -- 逾期记录次数
        150000.00, -- 资产价值
        300, -- 社交关系数量
        1, -- 法律纠纷记录次数
        'Stable' -- 行为分析
       );

#创建 系统日志表 (System_Log)
CREATE TABLE system_log
(
    log_id   INT AUTO_INCREMENT,
    user_id  INT,
    log_date TIMESTAMP,
    action   VARCHAR(255),
    PRIMARY KEY (log_id),
    FOREIGN KEY (user_id) REFERENCES user (user_id)
);

